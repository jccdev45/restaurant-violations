/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as RestaurantsIndexImport } from './routes/restaurants/index'
import { Route as RestaurantsCamisImport } from './routes/restaurants/$camis'
import { Route as RestaurantsCamisInspectionsIndexImport } from './routes/restaurants/$camis/inspections/index'
import { Route as RestaurantsCamisInspectionsInspectionDateImport } from './routes/restaurants/$camis/inspections/$inspectionDate'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RestaurantsIndexRoute = RestaurantsIndexImport.update({
  id: '/restaurants/',
  path: '/restaurants/',
  getParentRoute: () => rootRoute,
} as any)

const RestaurantsCamisRoute = RestaurantsCamisImport.update({
  id: '/restaurants/$camis',
  path: '/restaurants/$camis',
  getParentRoute: () => rootRoute,
} as any)

const RestaurantsCamisInspectionsIndexRoute =
  RestaurantsCamisInspectionsIndexImport.update({
    id: '/inspections/',
    path: '/inspections/',
    getParentRoute: () => RestaurantsCamisRoute,
  } as any)

const RestaurantsCamisInspectionsInspectionDateRoute =
  RestaurantsCamisInspectionsInspectionDateImport.update({
    id: '/inspections/$inspectionDate',
    path: '/inspections/$inspectionDate',
    getParentRoute: () => RestaurantsCamisRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/restaurants/$camis': {
      id: '/restaurants/$camis'
      path: '/restaurants/$camis'
      fullPath: '/restaurants/$camis'
      preLoaderRoute: typeof RestaurantsCamisImport
      parentRoute: typeof rootRoute
    }
    '/restaurants/': {
      id: '/restaurants/'
      path: '/restaurants'
      fullPath: '/restaurants'
      preLoaderRoute: typeof RestaurantsIndexImport
      parentRoute: typeof rootRoute
    }
    '/restaurants/$camis/inspections/$inspectionDate': {
      id: '/restaurants/$camis/inspections/$inspectionDate'
      path: '/inspections/$inspectionDate'
      fullPath: '/restaurants/$camis/inspections/$inspectionDate'
      preLoaderRoute: typeof RestaurantsCamisInspectionsInspectionDateImport
      parentRoute: typeof RestaurantsCamisImport
    }
    '/restaurants/$camis/inspections/': {
      id: '/restaurants/$camis/inspections/'
      path: '/inspections'
      fullPath: '/restaurants/$camis/inspections'
      preLoaderRoute: typeof RestaurantsCamisInspectionsIndexImport
      parentRoute: typeof RestaurantsCamisImport
    }
  }
}

// Create and export the route tree

interface RestaurantsCamisRouteChildren {
  RestaurantsCamisInspectionsInspectionDateRoute: typeof RestaurantsCamisInspectionsInspectionDateRoute
  RestaurantsCamisInspectionsIndexRoute: typeof RestaurantsCamisInspectionsIndexRoute
}

const RestaurantsCamisRouteChildren: RestaurantsCamisRouteChildren = {
  RestaurantsCamisInspectionsInspectionDateRoute:
    RestaurantsCamisInspectionsInspectionDateRoute,
  RestaurantsCamisInspectionsIndexRoute: RestaurantsCamisInspectionsIndexRoute,
}

const RestaurantsCamisRouteWithChildren =
  RestaurantsCamisRoute._addFileChildren(RestaurantsCamisRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/restaurants/$camis': typeof RestaurantsCamisRouteWithChildren
  '/restaurants': typeof RestaurantsIndexRoute
  '/restaurants/$camis/inspections/$inspectionDate': typeof RestaurantsCamisInspectionsInspectionDateRoute
  '/restaurants/$camis/inspections': typeof RestaurantsCamisInspectionsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/restaurants/$camis': typeof RestaurantsCamisRouteWithChildren
  '/restaurants': typeof RestaurantsIndexRoute
  '/restaurants/$camis/inspections/$inspectionDate': typeof RestaurantsCamisInspectionsInspectionDateRoute
  '/restaurants/$camis/inspections': typeof RestaurantsCamisInspectionsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/restaurants/$camis': typeof RestaurantsCamisRouteWithChildren
  '/restaurants/': typeof RestaurantsIndexRoute
  '/restaurants/$camis/inspections/$inspectionDate': typeof RestaurantsCamisInspectionsInspectionDateRoute
  '/restaurants/$camis/inspections/': typeof RestaurantsCamisInspectionsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/restaurants/$camis'
    | '/restaurants'
    | '/restaurants/$camis/inspections/$inspectionDate'
    | '/restaurants/$camis/inspections'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/restaurants/$camis'
    | '/restaurants'
    | '/restaurants/$camis/inspections/$inspectionDate'
    | '/restaurants/$camis/inspections'
  id:
    | '__root__'
    | '/'
    | '/restaurants/$camis'
    | '/restaurants/'
    | '/restaurants/$camis/inspections/$inspectionDate'
    | '/restaurants/$camis/inspections/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RestaurantsCamisRoute: typeof RestaurantsCamisRouteWithChildren
  RestaurantsIndexRoute: typeof RestaurantsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RestaurantsCamisRoute: RestaurantsCamisRouteWithChildren,
  RestaurantsIndexRoute: RestaurantsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/restaurants/$camis",
        "/restaurants/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/restaurants/$camis": {
      "filePath": "restaurants/$camis.tsx",
      "children": [
        "/restaurants/$camis/inspections/$inspectionDate",
        "/restaurants/$camis/inspections/"
      ]
    },
    "/restaurants/": {
      "filePath": "restaurants/index.tsx"
    },
    "/restaurants/$camis/inspections/$inspectionDate": {
      "filePath": "restaurants/$camis/inspections/$inspectionDate.tsx",
      "parent": "/restaurants/$camis"
    },
    "/restaurants/$camis/inspections/": {
      "filePath": "restaurants/$camis/inspections/index.tsx",
      "parent": "/restaurants/$camis"
    }
  }
}
ROUTE_MANIFEST_END */
